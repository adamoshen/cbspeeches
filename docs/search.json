[{"path":"index.html","id":"analysis-of-central-bank-speeches","chapter":"Analysis of Central Bank Speeches","heading":"Analysis of Central Bank Speeches","text":"","code":""},{"path":"data-setup.html","id":"data-setup","chapter":"1 Data setup","heading":"1 Data setup","text":"Read speeches Dropbox:Perform minor adjustments:Rename column processed_text simply text.Remove time component dates.Perform normalization text author names ASCII form.Write raw data pin board:","code":"\nlibrary(tidyverse)\nlibrary(pins)\nlibrary(pinsqs)\nlibrary(AzureStor)\n\nsource(here::here(\"R\", \"azure_init.R\"))\n\nspeeches_board <- storage_endpoint(\"https://cbspeeches1.dfs.core.windows.net/\", token=token) %>%\n  storage_container(name = \"cbspeeches\") %>%\n  board_azure(path = \"data-speeches\")\nspeeches <- read_csv(\"~/boc_speeches/lda/iteration_04/speeches_processed.csv\")\nspeeches <- speeches %>%\n  rename(text = processed_text) %>%\n  mutate(\n    date = as_date(date),\n    text = stringi::stri_trans_general(text, \"Greek-Latin\"),\n    text = stringi::stri_trans_general(text, \"Latin-ASCII\"),\n    author = stringi::stri_trans_general(author, \"Greek-Latin\"),\n    author = stringi::stri_trans_general(author, \"Latin-ASCII\")\n  )\nspeeches_board %>%\n  pin_qsave(\n    speeches,\n    \"speeches-raw\",\n    title = \"speeches from dropbox with minor tweaks\"\n  )"},{"path":"extracting-the-institution-from-the-text.html","id":"extracting-the-institution-from-the-text","chapter":"2 Extracting the institution from the text","heading":"2 Extracting the institution from the text","text":"Speeches dominant language English, removed. 18,827 speeches, 18,813\n(99.93%) English 14 (0.7%) English.attempt extract institution first sentence speech performed \nfollows:remaining speeches whose institutions extracted process, \nauthorsâ€™ names Googled obtain affiliation, recorded \ninst/data-misc/author_affiliations.xlsx. list used reference populate \nmissing institution values author name present.Two rows remain missing values author institution. missing values can filled\nfollows:Writing data pin board:","code":"\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(pins)\nlibrary(pinsqs)\nlibrary(cld2)\nlibrary(AzureStor)\n\nsource(here::here(\"R\", \"azure_init.R\"))\n\nspeeches_board <- storage_endpoint(\"https://cbspeeches1.dfs.core.windows.net/\", token=token) %>%\n  storage_container(name = \"cbspeeches\") %>%\n  board_azure(path = \"data-speeches\")\nspeeches <- speeches_board %>%\n  pin_qread(\"speeches-raw\")\nspeeches <- speeches %>%\n  mutate(lang_cld2 = detect_language(text)) %>%\n  filter(lang_cld2 == \"en\") %>%\n  select(-lang_cld2)\nextract_pattern1 <- \"(?<=(?:Board of Governors|Governing Board|Executive Board|Chief Executive Officer) of the )[^[:punct:]]+\"\nextract_pattern2 <- \"(?<=(?:Governor|President|Chairman|Director|Executive|Manager|Directorate) of the )[^[:punct:]]+\"\nextract_pattern3 <- \"(?<=Governor of )[^[:punct:]]+\" # for Philippines\nextract_pattern4 <- \"(?:Central|Reserve) Bank of (?:[:upper:][:lower:]+\\\\s?)+\"\nextract_pattern5 <- \"Bank of (?:[:upper:][:lower:]+\\\\s?)+\"\nextract_pattern6 <- \"(?i)National Bank of Serbia|Swiss National Bank|Hong Kong Monetary Authority|Monetary Authority of Singapore|Banco de Espana|Banco de Portugal|Banco de Mexico|South African Reserve Bank|Sveriges Riksbank|Oesterreichische Nationalbank\"\nextract_pattern7 <- \"Federal Reserve System\"\nextract_pattern8 <- \"(?i)Bank of [:alpha:]+\"\n\nspeeches <- speeches %>%\n  mutate(\n    # Remove periods after salutations, initials, and credentials\n    text = str_remove_all(text, \"(?<=Mr|Ms|Mrs|PhD|Dr|Dott|Prof|Jr|Sig|\\\\bp|\\\\bm|\\\\ba|\\\\bh|\\\\bc|\\\\bmult|vs|[A-Z0-9])\\\\.\"),\n    text = str_replace_all(text, \"Member Board of Governors\", \"Member of the Board of Governors\"),\n    text = str_replace_all(text, \"Govenor\", \"Governor\"),\n    # Extract first sentence before looking for patterns.\n    first_sentence = str_extract(text, \"^[^.]+\\\\.\"),\n    institution = str_extract(first_sentence, extract_pattern1),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern2), institution),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern3), institution),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern4), institution),\n    institution = if_else(institution == \"People\", \"People's Bank of China\", institution),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern5), institution),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern6), institution),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern7), institution),\n    institution = if_else(is.na(institution), str_extract(first_sentence, extract_pattern8), institution)\n  )\nauthor_affiliations <- read_xlsx(here::here(\"inst\", \"data-misc\", \"author_affiliations.xlsx\")) %>%\n  pull(affiliation, name=author) %>%\n  as.list()\n\nspeeches <- speeches %>%\n  mutate(\n    institution = if_else(\n      is.na(institution),\n      map_chr(author, ~ pluck(author_affiliations, .x, .default=NA)),\n      institution\n    )\n  )\ndata_update <- tribble(\n  ~doc, ~author, ~institution,\n  \"r180725i\", \"Pablo Hernandez de Cos\", \"Bank of Spain\",\n  \"r180810b\", \"Jorgovanka Tabakovic\", \"National Bank of Serbia\"\n)\n\nspeeches <- speeches %>%\n  rows_update(data_update, by=\"doc\")\nspeeches_board %>%\n  pin_qsave(\n    speeches,\n    \"speeches-with-institution\",\n    title = \"Speeches with institution column populated\"\n  )"}]
